version: 2.1

jobs: # a collection of steps
  # build:
  #   docker: # run the steps with Docker
  #     # - image: circleci/node:8.12.0 # ...with this image as the primary container; this is where all `steps` will run
  #     - image: circleci/node:10.15.3 # ...with this image as the primary container; this is where all `steps` will run
  #       environment:
  #         TERM: xterm
  #   steps:
  #     - checkout # special step to check out source code to working directory
  #     - restore_cache: # special step to restore the dependency cache
  #         key: node-cache{{ checksum "package.json" }}
  #     - run:
  #         command: npm install
  #     - save_cache: # special step to save the dependency cache
  #         key: node-cache{{ checksum "package.json" }}
  #         paths:
  #           - ./node_modules
  #           - /root/.cache

  run_tests:
    docker:
      - image: circleci/node:10.22.1
        environment:
          TERM: xterm
    steps:
      - checkout # special step to check out source code to working directory
      # - restore_cache: # special step to restore the dependency cache
      #     key: node-cache{{ checksum "package.json" }}
      - run:
          command: npm install
      - run:
          command: npm run ci:test

  run_e2e_tests:
    docker:
      # - image: circleci/node:8.12.0 # ...with this image as the primary container; this is where all `steps` will run
      - image: cypress/browsers:node10.16.0-chrome77
        environment:
          TERM: xterm
      # in case of overlapping port numbers provide name param
      # https://support.circleci.com/hc/en-us/articles/360007186173-Port-conflicts-with-service-containers-on-Docker-executor
      # - image: influxdb:1.6-alpine
      #   environment:
      #     INFLUXDB_HTTP_AUTH_ENABLED: true
      #     INFLUXDB_ADMIN_USER: 'admin'
      #     INFLUXDB_ADMIN_PASSWORD: 'password'
      #     INFLUXDB_DB: 'testdb'
    steps:
      - checkout # special step to check out source code to working directory
      - run:
          command: npm install
      - run:
          command: npm run start
          background: true
      - run:
          command: npx wait-on -d 60000 http://localhost:3000
          # command: npm run wait-on http://localhost:3000 && npm run wait-on http://localhost:8086/ping
      - run:
          command: npm run ci:cypress

workflows:
  tests:
    jobs:
      # - build
      # - run_tests:
      #     requires:
      #       - build
      - run_tests
      - run_e2e_tests
